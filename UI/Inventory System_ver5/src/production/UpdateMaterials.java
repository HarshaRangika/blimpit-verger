/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package production;

import controller.ApiConnector;
import controller.UsermangementClient;
import controller.FileHandler;
import controller.MaterialController;
import controller.ProductController;
import controller.StockController;
import gui.VergerMain;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;
import static production.Materials.lf;

/**
 *
 * @author harsha
 */
public class UpdateMaterials extends javax.swing.JFrame {

    private ArrayList<ProductController> proData;
    private ArrayList<MaterialController> matData;
    private String proID = null;
    private String fileName;
    private String material = null;
    private String selectedRow = null;
    private String loadProductID;

    public UpdateMaterials(String productID) {
        lookandfeels();
        initComponents();
        ImageIcon icon = new ImageIcon("Image/icon2.png");
        setIconImage(icon.getImage());
        
        loadProductID = productID;

        LoadMaterials(productID);
        loardProducts();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jTextField_rmIDNo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField_quantity = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField_orgin = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField_packing = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField_storagePortion = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField_grade = new javax.swing.JTextField();
        jButton_attach = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RM ID No.", "Quantity", "Origin", "Grade", "Packing", "Storage Portion", "Buying Voucher Picture"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel6.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        jLabel6.setText("Product Name");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Product" }));
        jComboBox1.setMinimumSize(new java.awt.Dimension(100, 32));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        jLabel1.setText("RM ID No.");

        jTextField_rmIDNo.setMinimumSize(new java.awt.Dimension(100, 32));

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        jLabel2.setText("Quantity");

        jTextField_quantity.setMinimumSize(new java.awt.Dimension(100, 32));
        jTextField_quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_quantityActionPerformed(evt);
            }
        });
        jTextField_quantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_quantityKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        jLabel3.setText("Orgin");

        jTextField_orgin.setMinimumSize(new java.awt.Dimension(100, 32));

        jLabel7.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        jLabel7.setText("Grade");

        jLabel4.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        jLabel4.setText("Packing");

        jTextField_packing.setMinimumSize(new java.awt.Dimension(100, 32));

        jLabel5.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        jLabel5.setText("Storage Portion");

        jTextField_storagePortion.setMinimumSize(new java.awt.Dimension(100, 32));
        jTextField_storagePortion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_storagePortionActionPerformed(evt);
            }
        });
        jTextField_storagePortion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_storagePortionKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        jLabel8.setText("Buying Voucher Picture");

        jTextField_grade.setMinimumSize(new java.awt.Dimension(100, 32));

        jButton_attach.setText("Attach Picture");
        jButton_attach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_attachActionPerformed(evt);
            }
        });

        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Powerd By");

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/Blimp_50x.png"))); // NOI18N
        jLabel13.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/production/Left_20px.png"))); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jTextField_rmIDNo, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField_orgin, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jTextField_packing, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(22, 22, 22)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField_storagePortion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton_attach, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(363, 363, 363)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                                .addGap(64, 64, 64)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jTextField_grade, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel1)
                        .addComponent(jLabel3)
                        .addComponent(jLabel7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField_rmIDNo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField_quantity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField_orgin, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_grade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                                    .addComponent(jTextField_packing, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                                    .addComponent(jTextField_storagePortion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton_attach, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jLabel12)
                .addGap(0, 0, 0)
                .addComponent(jLabel13)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        Materials mtr = new Materials();
        mtr.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void jTextField_storagePortionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_storagePortionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_storagePortionActionPerformed

    private void jTextField_quantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_quantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_quantityActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged

    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        try {

            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            int a = jTable1.getSelectedRow();

            selectedRow = String.valueOf(a);

            String rm_id = dtm.getValueAt(a, 0).toString();

            for (MaterialController mc : matData) {
                if (rm_id.equals(mc.getRmId())) {
                    for (ProductController pcc : proData) {
                        if (mc.getProductID().equals(pcc.getProductID())) {

                            jComboBox1.setSelectedItem(pcc.getProductName());
                            jTextField_rmIDNo.setText(dtm.getValueAt(a, 0).toString());
                            jTextField_quantity.setText(dtm.getValueAt(a, 1).toString());
                            jTextField_orgin.setText(dtm.getValueAt(a, 2).toString());
                            jTextField_grade.setText(dtm.getValueAt(a, 3).toString());
                            jTextField_packing.setText(dtm.getValueAt(a, 4).toString());
                            jTextField_storagePortion.setText(dtm.getValueAt(a, 5).toString());
                            fileName = dtm.getValueAt(a, 6).toString();

                            ///Voucher Pic eka set karanna
                        }
                    }
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton_attachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_attachActionPerformed

        FileHandler filehandler = new FileHandler("Matterial" , "/home/harsha/Desktop");
        filehandler.fileName(this);
        fileName = filehandler.fileName(this);

    }//GEN-LAST:event_jButton_attachActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        try {

            if (selectedRow == null) {
                JOptionPane.showMessageDialog(null, "Please select the row that you want to change..");
            } else if (jTextField_rmIDNo.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "RM ID No. is empty.");

            } else if (jTextField_quantity.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Quantity is empty.");

            } else if (jTextField_orgin.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Orgin is empty.");

            } else if (jTextField_grade.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Grade is empty.");

            } else if (jTextField_packing.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Packing is empty.");

            } else if (jTextField_storagePortion.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Storage Portion is empty.");

            } else if (fileName == null) {
                JOptionPane.showMessageDialog(null, "Buying Voucher Picture is Not Selected.");

            } else if (jComboBox1.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "Product Name is empty.");

            } else {

                org.json.simple.JSONObject jobject = new org.json.simple.JSONObject();
                UsermangementClient clnt = new UsermangementClient();

                material = jComboBox1.getSelectedItem().toString();

                //     System.out.println("material = " + material);
                for (ProductController pd : proData) {
                    if (pd.getProductName() == material) {
                        proID = pd.getProductID();
                        System.out.println("proID = " + proID);
                    }
                }

                jobject.put("rmId", jTextField_rmIDNo.getText().toString());
                jobject.put("quantity", jTextField_quantity.getText().toString());
                jobject.put("origin", jTextField_orgin.getText().toString());
                jobject.put("grade", jTextField_grade.getText().toString());
                jobject.put("packing", jTextField_packing.getText().toString());
                jobject.put("storagePortion", jTextField_storagePortion.getText().toString());
                jobject.put("buyingVoucherPicture", fileName);
                jobject.put("productID", proID);

                System.out.println("JOBJECT Updating === " + jobject);
                clnt.sendData("http://localhost:8080/api/production/updateMat", jobject);

                fileName = null;
                selectedRow = null;

                UpdateMaterials upmat = new UpdateMaterials(loadProductID);
                upmat.setVisible(true);
                this.dispose();

                //  loardProducts();
                // LoadMaterials();
            }

//            proID = null;
//            material = null;
        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField_quantityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_quantityKeyTyped

        char enter = evt.getKeyChar();
        if(!(Character.isDigit(enter))){
            evt.consume();
        }
        
    }//GEN-LAST:event_jTextField_quantityKeyTyped

    private void jTextField_storagePortionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_storagePortionKeyTyped

        char enter = evt.getKeyChar();
        if(!(Character.isDigit(enter))){
            evt.consume();
        }
        
    }//GEN-LAST:event_jTextField_storagePortionKeyTyped

    public void LoadMaterials(String productID) {

        ApiConnector apihandler = new ApiConnector();
        String get = apihandler.get("http://localhost:8080/api/production/rmdata");

        JSONParser parser = new JSONParser();
        JSONArray array = null;

        int arrayLength = 0;

        try {
            array = (JSONArray) parser.parse(get);
            arrayLength = array.size();

            System.out.println("Loding Array === " + array);

            Vector data;
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);

            JSONObject jsondata = new JSONObject();

            MaterialController mtc;
            matData = new ArrayList<>();

            for (int i = 0; i < arrayLength; i++) {
                jsondata = (JSONObject) array.get(i);
                
                if(productID != null){
                    if(productID.equals(jsondata.get("productID").toString())){
                        data = new Vector();
                mtc = new MaterialController();

                data.add(jsondata.get("rmId"));
                data.add(jsondata.get("quantity"));
                data.add(jsondata.get("origin"));
                data.add(jsondata.get("grade"));
                data.add(jsondata.get("packing"));
                data.add(jsondata.get("storagePortion"));
                data.add(jsondata.get("buyingVoucherPicture"));

                dtm.addRow(data);

                mtc.setRmId(jsondata.get("rmId").toString());
                mtc.setQuantity(Integer.parseInt(jsondata.get("quantity").toString()));
                mtc.setOrigin(jsondata.get("origin").toString());
                mtc.setGrade(jsondata.get("grade").toString());
                mtc.setPacking(jsondata.get("packing").toString());
                mtc.setStoragePortion(Integer.parseInt(jsondata.get("storagePortion").toString()));
                mtc.setBuyingVoucherPicture(jsondata.get("buyingVoucherPicture").toString());
                mtc.setProductID(jsondata.get("productID").toString());

                matData.add(mtc);
                    }
                }else{
                    data = new Vector();
                mtc = new MaterialController();

                data.add(jsondata.get("rmId"));
                data.add(jsondata.get("quantity"));
                data.add(jsondata.get("origin"));
                data.add(jsondata.get("grade"));
                data.add(jsondata.get("packing"));
                data.add(jsondata.get("storagePortion"));
                data.add(jsondata.get("buyingVoucherPicture"));

                dtm.addRow(data);

                mtc.setRmId(jsondata.get("rmId").toString());
                mtc.setQuantity(Integer.parseInt(jsondata.get("quantity").toString()));
                mtc.setOrigin(jsondata.get("origin").toString());
                mtc.setGrade(jsondata.get("grade").toString());
                mtc.setPacking(jsondata.get("packing").toString());
                mtc.setStoragePortion(Integer.parseInt(jsondata.get("storagePortion").toString()));
                mtc.setBuyingVoucherPicture(jsondata.get("buyingVoucherPicture").toString());
                mtc.setProductID(jsondata.get("productID").toString());

                matData.add(mtc);
                }

            }

        } catch (ParseException ex) {
            ex.printStackTrace();
        }

    }

    private void loardProducts() {
        try {

            ApiConnector apihandler = new ApiConnector();
            String get = apihandler.get("http://localhost:8080/api/production/getPro");

            JSONParser parser = new JSONParser();
            JSONArray array = null;

            int arrayLength = 0;

            try {
                array = (JSONArray) parser.parse(get);
                arrayLength = array.size();

                //   System.out.println(array);
            } catch (ParseException ex) {
                ex.printStackTrace();
            }

            // Vector data;
            JSONObject jsondata = new JSONObject();

            ProductController pdc;
            proData = new ArrayList<>();

            for (int i = 0; i < arrayLength; i++) {
                jsondata = (JSONObject) array.get(i);
                //   data = new Vector();            
                pdc = new ProductController();
                pdc.setProductID(jsondata.get("productID").toString());
                pdc.setProductName(jsondata.get("productName").toString());

                proData.add(pdc);
                jComboBox1.addItem(jsondata.get("productName").toString());

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private static void lookandfeels() {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
                javax.swing.UIManager.setLookAndFeel(lf);
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VergerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VergerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VergerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VergerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateMaterials.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateMaterials.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateMaterials.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateMaterials.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateMaterials("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton_attach;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField_grade;
    private javax.swing.JTextField jTextField_orgin;
    private javax.swing.JTextField jTextField_packing;
    private javax.swing.JTextField jTextField_quantity;
    private javax.swing.JTextField jTextField_rmIDNo;
    private javax.swing.JTextField jTextField_storagePortion;
    // End of variables declaration//GEN-END:variables
}
